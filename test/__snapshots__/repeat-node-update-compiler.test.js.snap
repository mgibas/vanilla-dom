// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`repeat-node-update-compiler on compile multipl paths 1`] = `
"_reactivePaths['bars'] = _reactivePaths['bars'] || [];
_reactivePaths['bars'].push({
  update: state => {
    let prevCount = items.length;
    items = state.bars.push(...state.foos);
    for (let i = items.length; i < prevCount; i++) {
      let toRemove = _nodes.pop();
      parent.removeChild(toRemove);
    }
    for (let i = prevCount; i < items.length; i++) {
      let newNode = CHILDREN_COMPILER_PART('parent', '[object Object]');
      _nodes.push(newNode);
    }
  }
});
_reactivePaths['foos'] = _reactivePaths['foos'] || [];
_reactivePaths['foos'].push({
  update: state => {
    let prevCount = items.length;
    items = state.bars.push(...state.foos);
    for (let i = items.length; i < prevCount; i++) {
      let toRemove = _nodes.pop();
      parent.removeChild(toRemove);
    }
    for (let i = prevCount; i < items.length; i++) {
      let newNode = CHILDREN_COMPILER_PART('parent', '[object Object]');
      _nodes.push(newNode);
    }
  }
});"
`;

exports[`repeat-node-update-compiler on compile single path 1`] = `
"_reactivePaths['bars'] = _reactivePaths['bars'] || [];
_reactivePaths['bars'].push({
  update: state => {
    let prevCount = items.length;
    items = state.bars;
    for (let i = items.length; i < prevCount; i++) {
      let toRemove = _nodes.pop();
      parent.removeChild(toRemove);
    }
    for (let i = prevCount; i < items.length; i++) {
      let newNode = CHILDREN_COMPILER_PART('parent', '[object Object]');
      _nodes.push(newNode);
    }
  }
});"
`;
