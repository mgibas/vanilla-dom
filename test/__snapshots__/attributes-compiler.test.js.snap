// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`attributes-compiler on compile event handler attribute 1`] = `"element.addEventListener('click', this.handleClick.bind(this));"`;

exports[`attributes-compiler on compile multiple reactive expressioons in attribute value 1`] = `
"(() => {
  let val = (() => {
    try {
      return null;
    } catch (err) {
      return;
    }
  })();
  if (val === null || val === undefined)
    val = \`\${ (() => {
      try {
        let val = state.hey;
        return val !== null && val !== undefined ? val : '';
      } catch (err) {
        return '';
      }
    })() } and \${ (() => {
      try {
        let val = state.blah;
        return val !== null && val !== undefined ? val : '';
      } catch (err) {
        return '';
      }
    })() }\`;
  if (typeof val === 'boolean' && val)
    element.setAttribute('foo', '');
  if (val && typeof val === 'string' || typeof val === 'number') {
    element.setAttribute('foo', val);
  }
  UPDATE_COMPILER_PART;
})();"
`;

exports[`attributes-compiler on compile reactive expressioon attribute 1`] = `
"(() => {
  let val = (() => {
    try {
      return state.hey;
    } catch (err) {
      return;
    }
  })();
  if (val === null || val === undefined)
    val = \`\${ (() => {
      try {
        let val = state.hey;
        return val !== null && val !== undefined ? val : '';
      } catch (err) {
        return '';
      }
    })() }\`;
  if (typeof val === 'boolean' && val)
    element.setAttribute('foo', '');
  if (val && typeof val === 'string' || typeof val === 'number') {
    element.setAttribute('foo', val);
  }
  UPDATE_COMPILER_PART;
})();"
`;

exports[`attributes-compiler on compile simple attributes 1`] = `
"element.setAttribute('foo', \`bar\`);
element.setAttribute('bar', \`foo\`);"
`;
