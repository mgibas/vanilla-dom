// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`attribute-update-compiler on compile class attribute 1`] = `
"_updaters.push({
  update: st => {
    let val = 1;
    if (val === null || val === undefined)
      val = 'awesome';
    let currentVal = testElement.getAttribute('class');
    if (typeof val === 'boolean' && val) {
      if (currentVal !== '')
        testElement.setAttribute('class', '');
      return;
    }
    if (val && typeof val === 'string' || typeof val === 'number') {
      if (currentVal != val) {
        testElement.className = val;
      }
      return;
    }
    testElement.removeAttribute('class');
  }
});"
`;

exports[`attribute-update-compiler on compile multiple paths 1`] = `
"_updaters.push({
  update: st => {
    let val = 1;
    if (val === null || val === undefined)
      val = 'test-template-string';
    let currentVal = testElement.getAttribute('foo');
    if (typeof val === 'boolean' && val) {
      if (currentVal !== '')
        testElement.setAttribute('foo', '');
      return;
    }
    if (val && typeof val === 'string' || typeof val === 'number') {
      if (currentVal != val) {
        testElement.setAttribute('foo', val);
      }
      return;
    }
    testElement.removeAttribute('foo');
  }
});"
`;

exports[`attribute-update-compiler on compile single path 1`] = `
"_updaters.push({
  update: st => {
    let val = 1;
    if (val === null || val === undefined)
      val = 'test-template-string';
    let currentVal = testElement.getAttribute('foo');
    if (typeof val === 'boolean' && val) {
      if (currentVal !== '')
        testElement.setAttribute('foo', '');
      return;
    }
    if (val && typeof val === 'string' || typeof val === 'number') {
      if (currentVal != val) {
        testElement.setAttribute('foo', val);
      }
      return;
    }
    testElement.removeAttribute('foo');
  }
});"
`;
