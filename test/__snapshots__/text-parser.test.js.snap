// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`text-parses on parse creates propper template function - method call 1`] = `
"\`\${(()=>{
            try{
              let val = (st.fullname.toString())
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function - mixed with text 1`] = `
"\`\${(()=>{
            try{
              let val = (st.firstname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()} and \${(()=>{
            try{
              let val = (st.lastname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function - properties in method call 1`] = `
"\`\${(()=>{
            try{
              let val = (new Date(st.year, st.month, st.day).toString())
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function - simple js 1`] = `
"\`\${(()=>{
            try{
              let val = (st.firstname + st.lastname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function - single property 1`] = `
"\`\${(()=>{
            try{
              let val = (st.fullname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function that can rescope - method call 1`] = `
"\`\${(()=>{
            try{
              let val = (st.fullname.toString())
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function that can rescope - mixed with text 1`] = `
"\`\${(()=>{
            try{
              let val = (st.firstname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()} and \${(()=>{
            try{
              let val = (st.lastname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function that can rescope - properties in method call 1`] = `
"\`\${(()=>{
            try{
              let val = (new Date(st.year, st.month, st.day).toString())
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function that can rescope - simple js 1`] = `
"\`\${(()=>{
            try{
              let val = (st.firstname + st.lastname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper template function that can rescope - single property 1`] = `
"\`\${(()=>{
            try{
              let val = (st.fullname)
              return val !== null && val !== undefined ? val : '' 
            }catch(err){
              return ''
            }
          })()}\`"
`;

exports[`text-parses on parse creates propper value function - method call 1`] = `"(() => { try { return (st.fullname.toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - mixed with text 1`] = `"(() => { try { return (null) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - properties in method call 1`] = `"(() => { try { return (new Date(st.year, st.month, st.day).toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - simple js 1`] = `"(() => { try { return (st.firstname + st.lastname) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - single property 1`] = `"(() => { try { return (st.fullname) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - method call 1`] = `"(() => { try { return (st.fullname.toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - mixed with text 1`] = `"(() => { try { return (null) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - properties in method call 1`] = `"(() => { try { return (new Date(st.year, st.month, st.day).toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - simple js 1`] = `"(() => { try { return (st.firstname + st.lastname) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - single property 1`] = `"(() => { try { return (st.fullname) } catch (err) { return } })()"`;

exports[`text-parses on parse return propper parsing result - method call 1`] = `
Object {
  "rawTokens": Array [
    "{{st.fullname.toString()}}",
  ],
  "template": [Function],
  "tokens": Array [
    "st.fullname.toString()",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - mixed with text 1`] = `
Object {
  "rawTokens": Array [
    "{{st.firstname}}",
    "{{st.lastname}}",
  ],
  "template": [Function],
  "tokens": Array [
    "st.firstname",
    "st.lastname",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - properties in method call 1`] = `
Object {
  "rawTokens": Array [
    "{{new Date(st.year, st.month, st.day).toString()}}",
  ],
  "template": [Function],
  "tokens": Array [
    "new Date(st.year, st.month, st.day).toString()",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - simple js 1`] = `
Object {
  "rawTokens": Array [
    "{{st.firstname + st.lastname}}",
  ],
  "template": [Function],
  "tokens": Array [
    "st.firstname + st.lastname",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - single property 1`] = `
Object {
  "rawTokens": Array [
    "{{st.fullname}}",
  ],
  "template": [Function],
  "tokens": Array [
    "st.fullname",
  ],
  "value": [Function],
}
`;
