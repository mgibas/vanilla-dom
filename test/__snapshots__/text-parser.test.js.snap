// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`text-parses on parse creates propper template function - method call 1`] = `"\`\${(()=>{try{return (state.fullname.toString())}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function - mixed with text 1`] = `"\`\${(()=>{try{return (state.firstname)}catch(err){return ''}})() || ''} and \${(()=>{try{return (state.lastname)}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function - properties in method call 1`] = `"\`\${(()=>{try{return (new Date(state.year, state.month, state.day).toString())}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function - simple js 1`] = `"\`\${(()=>{try{return (state.firstname + state.lastname)}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function - single property 1`] = `"\`\${(()=>{try{return (state.fullname)}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function that can rescope - method call 1`] = `"\`\${(()=>{try{return (state.fullname.toString())}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function that can rescope - mixed with text 1`] = `"\`\${(()=>{try{return (state.firstname)}catch(err){return ''}})() || ''} and \${(()=>{try{return (state.lastname)}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function that can rescope - properties in method call 1`] = `"\`\${(()=>{try{return (new Date(state.year, state.month, state.day).toString())}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function that can rescope - simple js 1`] = `"\`\${(()=>{try{return (state.firstname + state.lastname)}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper template function that can rescope - single property 1`] = `"\`\${(()=>{try{return (state.fullname)}catch(err){return ''}})() || ''}\`"`;

exports[`text-parses on parse creates propper value function - method call 1`] = `"(() => { try { return (state.fullname.toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - mixed with text 1`] = `"(() => { try { return (null) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - properties in method call 1`] = `"(() => { try { return (new Date(state.year, state.month, state.day).toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - simple js 1`] = `"(() => { try { return (state.firstname + state.lastname) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function - single property 1`] = `"(() => { try { return (state.fullname) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - method call 1`] = `"(() => { try { return (state.fullname.toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - mixed with text 1`] = `"(() => { try { return (null) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - properties in method call 1`] = `"(() => { try { return (new Date(state.year, state.month, state.day).toString()) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - simple js 1`] = `"(() => { try { return (state.firstname + state.lastname) } catch (err) { return } })()"`;

exports[`text-parses on parse creates propper value function that can rescope - single property 1`] = `"(() => { try { return (state.fullname) } catch (err) { return } })()"`;

exports[`text-parses on parse return propper parsing result - method call 1`] = `
Object {
  "paths": Array [
    "fullname",
  ],
  "rawTokens": Array [
    "{{state.fullname.toString()}}",
  ],
  "template": [Function],
  "tokens": Array [
    "state.fullname.toString()",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - mixed with text 1`] = `
Object {
  "paths": Array [
    "firstname",
    "lastname",
  ],
  "rawTokens": Array [
    "{{state.firstname}}",
    "{{state.lastname}}",
  ],
  "template": [Function],
  "tokens": Array [
    "state.firstname",
    "state.lastname",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - properties in method call 1`] = `
Object {
  "paths": Array [
    "year",
    "month",
    "day",
  ],
  "rawTokens": Array [
    "{{new Date(state.year, state.month, state.day).toString()}}",
  ],
  "template": [Function],
  "tokens": Array [
    "new Date(state.year, state.month, state.day).toString()",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - simple js 1`] = `
Object {
  "paths": Array [
    "firstname",
    "lastname",
  ],
  "rawTokens": Array [
    "{{state.firstname + state.lastname}}",
  ],
  "template": [Function],
  "tokens": Array [
    "state.firstname + state.lastname",
  ],
  "value": [Function],
}
`;

exports[`text-parses on parse return propper parsing result - single property 1`] = `
Object {
  "paths": Array [
    "fullname",
  ],
  "rawTokens": Array [
    "{{state.fullname}}",
  ],
  "template": [Function],
  "tokens": Array [
    "state.fullname",
  ],
  "value": [Function],
}
`;
